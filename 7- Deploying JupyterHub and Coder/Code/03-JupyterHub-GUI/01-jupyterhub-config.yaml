hub:
  config:
    JupyterHub:
      authenticator_class: dummy
      admin_access: true
      admin_users: ["admin"]
    DummyAuthenticator:
      password: "training123"
    # Allow all users to sign in (for tutorial purposes)
    Authenticator:
      allowed_users: set()
    # Spawner configuration for GUI options
    KubeSpawner:
      cpu_limit: 4
      cpu_guarantee: 1
      mem_limit: "8G"
      mem_guarantee: "2G"
      # Allow users to select CPU and memory
      extra_resource_limits:
        nvidia.com/gpu: 0
      extra_resource_guarantees:
        nvidia.com/gpu: 0
      # Node selection options
      node_selector: {}
      tolerations: []
      affinity: {}
  service:
    type: ClusterIP
    annotations: {}
  deploymentStrategy:
    type: Recreate
  db:
    type: sqlite-pvc
    pvc:
      accessModes:
        - ReadWriteOnce
      storage: 1Gi
      storageClassName: rook-ceph-block
  resources:
    limits:
      cpu: "2"
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 512Mi
  networkPolicy:
    enabled: false
  extraConfig:
    # Advanced GUI customizations with fields, pickers, and colors
    00-custom-ui: |
      # Advanced custom CSS and HTML
      c.JupyterHub.template_vars = {
          'custom_css': '''
          <style>
          /* Advanced UI Theme - Purple/Teal */
          :root {
              --primary-color: #9b59b6;
              --secondary-color: #1abc9c;
              --accent-color: #e67e22;
              --dark-color: #2c3e50;
              --light-color: #ecf0f1;
          }
          
          /* Navbar styling */
          .navbar {
              background: linear-gradient(135deg, var(--primary-color), var(--secondary-color)) !important;
              box-shadow: 0 2px 10px rgba(0,0,0,0.1);
          }
          
          .navbar-brand {
              color: white !important;
              font-weight: bold;
              font-size: 28px;
              text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
          }
          
          /* Button styling */
          .btn-primary {
              background: linear-gradient(45deg, var(--primary-color), var(--accent-color)) !important;
              border: none !important;
              border-radius: 25px !important;
              padding: 10px 20px !important;
              font-weight: bold !important;
              text-transform: uppercase !important;
              letter-spacing: 1px !important;
              transition: all 0.3s ease !important;
          }
          
          .btn-primary:hover {
              transform: translateY(-2px) !important;
              box-shadow: 0 5px 15px rgba(0,0,0,0.2) !important;
          }
          
          /* Panel styling */
          .panel {
              border-radius: 15px !important;
              box-shadow: 0 5px 20px rgba(0,0,0,0.1) !important;
              border: none !important;
          }
          
          .panel-heading {
              background: linear-gradient(135deg, var(--dark-color), var(--primary-color)) !important;
              color: white !important;
              border-radius: 15px 15px 0 0 !important;
              padding: 20px !important;
              font-size: 18px !important;
              font-weight: bold !important;
          }
          
          .panel-body {
              padding: 25px !important;
              background: var(--light-color) !important;
          }
          
          /* Form styling */
          .form-control {
              border-radius: 10px !important;
              border: 2px solid #ddd !important;
              padding: 12px 15px !important;
              font-size: 16px !important;
              transition: all 0.3s ease !important;
          }
          
          .form-control:focus {
              border-color: var(--primary-color) !important;
              box-shadow: 0 0 10px rgba(155, 89, 182, 0.3) !important;
          }
          
          /* Select dropdown styling */
          select.form-control {
              background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%239b59b6' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") !important;
              background-repeat: no-repeat !important;
              background-position: right 12px center !important;
              background-size: 12px !important;
          }
          
          /* Custom welcome banner */
          .welcome-banner {
              background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
              color: white;
              padding: 30px;
              border-radius: 15px;
              margin: 20px 0;
              text-align: center;
              box-shadow: 0 10px 30px rgba(0,0,0,0.2);
          }
          
          .welcome-banner h1 {
              font-size: 36px;
              margin-bottom: 15px;
              text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
          }
          
          .welcome-banner p {
              font-size: 18px;
              margin-bottom: 0;
              opacity: 0.9;
          }
          
          /* Profile cards */
          .profile-card {
              background: white;
              border-radius: 15px;
              padding: 20px;
              margin: 10px 0;
              box-shadow: 0 5px 15px rgba(0,0,0,0.1);
              border-left: 5px solid var(--primary-color);
              transition: all 0.3s ease;
          }
          
          .profile-card:hover {
              transform: translateY(-5px);
              box-shadow: 0 10px 25px rgba(0,0,0,0.15);
          }
          
          /* Status indicators */
          .status-indicator {
              display: inline-block;
              width: 12px;
              height: 12px;
              border-radius: 50%;
              margin-right: 8px;
          }
          
          .status-online { background-color: var(--secondary-color); }
          .status-offline { background-color: #e74c3c; }
          .status-pending { background-color: var(--accent-color); }
          </style>
          ''',
          'custom_html': '''
          <div class="welcome-banner">
              <h1>üöÄ NRP JupyterHub - Advanced UI</h1>
              <p>Customized interface with advanced styling, fields, and interactive elements</p>
          </div>
          
          <div class="container">
              <div class="row">
                  <div class="col-md-6">
                      <div class="profile-card">
                          <h4>üé® UI Features</h4>
                          <ul>
                              <li>Gradient color schemes</li>
                              <li>Interactive form elements</li>
                              <li>Custom dropdowns</li>
                              <li>Animated buttons</li>
                          </ul>
                      </div>
                  </div>
                  <div class="col-md-6">
                      <div class="profile-card">
                          <h4>‚öôÔ∏è Spawner Options</h4>
                          <ul>
                              <li>CPU/Memory selection</li>
                              <li>GPU allocation</li>
                              <li>Region picker</li>
                              <li>Resource limits</li>
                          </ul>
                      </div>
                  </div>
              </div>
          </div>
          '''
      }

proxy:
  secretToken: "bf880329aec9070858ec96561fb072309a9af02686f67d08036dec1f3b469bd4"
  service:
    type: ClusterIP
  chp:
    resources:
      limits:
        cpu: "6"
        memory: 10Gi
      requests:
        cpu: "1"
        memory: 512Mi

singleuser:
  uid: 0
  fsGid: 100
  extraEnv:
    GRANT_SUDO: "yes"
  extraPodConfig:
    securityContext:
        fsGroupChangePolicy: "OnRootMismatch"
        fsGroup: 100
  cloudMetadata:
    blockWithIptables: false
  networkPolicy:
    enabled: false
  storage:
    type: dynamic
    extraLabels: {}
    extraVolumes: []
    extraVolumeMounts: []
    capacity: 5Gi
    homeMountPath: /home/jovyan
    dynamic:
      storageClass: rook-ceph-block
      pvcNameTemplate: claim-{username}{servername}
      volumeNameTemplate: volume-{username}{servername}
      storageAccessModes: [ReadWriteOnce]
  image:
    name: quay.io/jupyter/scipy-notebook
    tag: 2024-04-22
  startTimeout: 600
  cmd: null
  defaultUrl: "/lab"
  profileList:
  - display_name: "Small (1 CPU, 2GB RAM)"
    description: "Small instance for basic work"
    kubespawner_override:
      image_spec: quay.io/jupyter/scipy-notebook:2024-04-22
      cpu_limit: 1
      cpu_guarantee: 0.5
      mem_limit: "2G"
      mem_guarantee: "1G"
      node_selector:
        topology.kubernetes.io/region: us-west
    default: True
  - display_name: "Medium (2 CPU, 4GB RAM)"
    description: "Medium instance for moderate workloads"
    kubespawner_override:
      image_spec: quay.io/jupyter/scipy-notebook:2024-04-22
      cpu_limit: 2
      cpu_guarantee: 1
      mem_limit: "4G"
      mem_guarantee: "2G"
      node_selector:
        topology.kubernetes.io/region: us-west
  - display_name: "Large (4 CPU, 8GB RAM)"
    description: "Large instance for intensive workloads"
    kubespawner_override:
      image_spec: quay.io/jupyter/scipy-notebook:2024-04-22
      cpu_limit: 4
      cpu_guarantee: 2
      mem_limit: "8G"
      mem_guarantee: "4G"
      node_selector:
        topology.kubernetes.io/region: us-west
  - display_name: "GPU Small (1 CPU, 4GB RAM, 1 GPU)"
    description: "Small GPU instance"
    kubespawner_override:
      image_spec: quay.io/jupyter/tensorflow-notebook:cuda-2024-04-22
      cpu_limit: 1
      cpu_guarantee: 0.5
      mem_limit: "4G"
      mem_guarantee: "2G"
      extra_resource_limits:
        nvidia.com/gpu: "1"
      extra_resource_guarantees:
        nvidia.com/gpu: "1"
      node_selector:
        topology.kubernetes.io/region: us-west
  - display_name: "GPU Large (4 CPU, 16GB RAM, 2 GPU)"
    description: "Large GPU instance"
    kubespawner_override:
      image_spec: quay.io/jupyter/pytorch-notebook:cuda12-2024-04-22
      cpu_limit: 4
      cpu_guarantee: 2
      mem_limit: "16G"
      mem_guarantee: "8G"
      extra_resource_limits:
        nvidia.com/gpu: "2"
      extra_resource_guarantees:
        nvidia.com/gpu: "2"
      node_selector:
        topology.kubernetes.io/region: us-west

scheduling:
  userScheduler:
    enabled: false
  userPlaceholder:
    enabled: false

# prePuller relates to the hook|continuous-image-puller DaemonsSets
prePuller:
  hook:
    enabled: false
  continuous:
    enabled: false

ingress:
  enabled: true
  ingressClassName: haproxy
  hosts: ["training-test.nrp-nautilus.io"]
  pathSuffix: ''
  tls:
    - hosts:
      - training-test.nrp-nautilus.io

# Required culling configuration (mandatory for NRP cluster policies)
cull:
  enabled: true
  users: false
  removeNamedServers: false
  timeout: 3600      # 1 hour in seconds - Must be ‚â§ 21600 (6 hours)
  every: 600         # Check every 10 minutes
  concurrency: 10    # Number of parallel culling operations
  maxAge: 0          # No maximum age limit